
import java.awt.dnd.DropTarget;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * CreateAccount.java
 *
 * Created on 16 Dec, 2017, 8:55:14 PM
 */
/**
 *
 * @author paksh
 */
public class CreateAccount extends javax.swing.JFrame {

    Connection conn;
    PreparedStatement pst;
    ResultSet rs;
    Validation validator;

    //to store image File globally the save it locally
    File mUserImageFile;
    File mUserSigantureFile;

    /**
     * Creates new form CreateAccount
     */
    DragListener dragListener1;
    DragListener dragListener2;

    public CreateAccount() {
        initComponents();
        //create connection with database
        conn = DBConnect.connect();
        generateAccountId();
        validator = new Validation();

        //init the DragListner class for user profile picture
        dragListener1 = new DragListener(lblPhoto);

        //set the target componet for dropping item
        new DropTarget(lblPhoto, dragListener1);

        //init the DragListner class for user signature picture
        dragListener2 = new DragListener(lblSignPhoto);
        //set the target componet for dropping item
        new DropTarget(lblSignPhoto, dragListener2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAccNo = new javax.swing.JTextField();
        txtMobNo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaAdd = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        txtAdhar = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPan = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        rbdMale = new javax.swing.JRadioButton();
        rbdFemale = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlAccType = new javax.swing.JList();
        jLabel11 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btnCreate = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        lblPhoto = new javax.swing.JLabel();
        btnUploadUserImage = new javax.swing.JButton();
        lblSignPhoto = new javax.swing.JLabel();
        btnUploadSignature = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 204, 0));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 0));
        jLabel2.setText("Enter Name:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 0));
        jLabel3.setText("Account No:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 0));
        jLabel4.setText("Mobile No:");

        txtAccNo.setEditable(false);

        txtMobNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMobNoActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 0));
        jLabel5.setText("Photo:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 0));
        jLabel6.setText("Address:");

        txtaAdd.setColumns(20);
        txtaAdd.setRows(5);
        jScrollPane1.setViewportView(txtaAdd);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 0));
        jLabel7.setText("Adhar Card No:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 0, 0));
        jLabel8.setText("Pan card No:");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 0, 0));
        jLabel9.setText("Gender:");

        buttonGroup1.add(rbdMale);
        rbdMale.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rbdMale.setForeground(new java.awt.Color(153, 0, 0));
        rbdMale.setSelected(true);
        rbdMale.setText("Male");
        rbdMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbdMaleActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbdFemale);
        rbdFemale.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rbdFemale.setForeground(new java.awt.Color(153, 0, 0));
        rbdFemale.setText("Female");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 0, 0));
        jLabel10.setText("Account Type: ");

        jlAccType.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jlAccType.setForeground(new java.awt.Color(153, 0, 0));
        jlAccType.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Saving", "Current", "Business", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jlAccType.setSelectedIndex(0);
        jScrollPane2.setViewportView(jlAccType);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(153, 0, 0));
        jLabel11.setText("Deposite Amount:");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 0, 0));
        jLabel12.setText("Signature:");

        btnCreate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(153, 0, 0));
        btnCreate.setText("Create Account");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnReset.setForeground(new java.awt.Color(153, 0, 0));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnHome.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnHome.setForeground(new java.awt.Color(153, 0, 0));
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnLogout.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(153, 0, 0));
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        lblPhoto.setBackground(new java.awt.Color(255, 255, 255));
        lblPhoto.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblPhoto.setForeground(new java.awt.Color(153, 0, 0));
        lblPhoto.setOpaque(true);

        btnUploadUserImage.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnUploadUserImage.setForeground(new java.awt.Color(153, 0, 0));
        btnUploadUserImage.setText("Choose");
        btnUploadUserImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadUserImageActionPerformed(evt);
            }
        });

        lblSignPhoto.setBackground(new java.awt.Color(255, 255, 255));
        lblSignPhoto.setOpaque(true);

        btnUploadSignature.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnUploadSignature.setForeground(new java.awt.Color(153, 0, 0));
        btnUploadSignature.setText("Choose");
        btnUploadSignature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadSignatureActionPerformed(evt);
            }
        });

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home.jpg"))); // NOI18N

        btnClose.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnClose.setForeground(new java.awt.Color(153, 0, 0));
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(9, 9, 9)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtMobNo, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAccNo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnUploadUserImage, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(21, 21, 21))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(txtAmount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtAdhar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addGap(50, 50, 50)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblSignPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnUploadSignature)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel9))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(rbdMale)
                                    .addGap(18, 18, 18)
                                    .addComponent(rbdFemale))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(txtPan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)))
                .addGap(98, 98, 98))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(192, 192, 192)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(194, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(145, 145, 145))
                            .addComponent(lblPhoto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUploadUserImage, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtAccNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtMobNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 11, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtAdhar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbdMale)
                            .addComponent(rbdFemale)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSignPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUploadSignature)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(837, 658));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void rbdMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbdMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbdMaleActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        String name = txtName.getText();
        String mobileNo = txtMobNo.getText();
        String address = txtaAdd.getText();
        String adharNo = txtAdhar.getText();
        String panNo = txtPan.getText();
        if (validator.isFieldEmpty(txtName, txtMobNo, txtAdhar, txtPan) > 0) {
            JOptionPane.showMessageDialog(this, "All the fields must not be empty!!!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (lblPhoto.getIcon() == null) {

            JOptionPane.showMessageDialog(this, "Please upload a image for user!!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (address.equals("") || address == null) {
            JOptionPane.showMessageDialog(this, "All the fields must not be empty!!!", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!validator.isNumber(mobileNo) || mobileNo.length() < 10) {
            JOptionPane.showMessageDialog(this, "Incorrect Mobile number!!!", "Error", JOptionPane.ERROR_MESSAGE);

        } else if (!validator.isAdharNumber(adharNo)) {
            JOptionPane.showMessageDialog(this, "Incorrect Adhar Card Number!!!", "Error", JOptionPane.ERROR_MESSAGE);

        } else if (!validator.isPanNumber(panNo)) {
            JOptionPane.showMessageDialog(this, "Incorrect Pan Card Number!!!", "Error", JOptionPane.ERROR_MESSAGE);

        } else if (validator.isCharacters(name) == validator.HAS_NON_CHARACTERS) {
            JOptionPane.showMessageDialog(this, "Name Cannot Contains Number!!!", "Error", JOptionPane.ERROR_MESSAGE);

        } else {
            setUpAccount();
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtAccNo.setText("");
        txtAdhar.setText("");
        txtAmount.setText("");
        txtMobNo.setText("");
        txtName.setText("");
        txtPan.setText("");
        txtaAdd.setText("");
        lblPhoto.setText("");
        lblSignPhoto.setText("");

    }//GEN-LAST:event_btnResetActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        setVisible(false);
        new Home().setVisible(true);

    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        setVisible(false);
        new Authentication().setVisible(true);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnUploadUserImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadUserImageActionPerformed
        mUserImageFile = uploadImage(lblPhoto);

    }//GEN-LAST:event_btnUploadUserImageActionPerformed

    private void btnUploadSignatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadSignatureActionPerformed
        mUserSigantureFile = uploadImage(lblSignPhoto);
    }//GEN-LAST:event_btnUploadSignatureActionPerformed

    private void txtMobNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMobNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMobNoActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUploadSignature;
    private javax.swing.JButton btnUploadUserImage;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList jlAccType;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JLabel lblSignPhoto;
    private javax.swing.JRadioButton rbdFemale;
    private javax.swing.JRadioButton rbdMale;
    private javax.swing.JTextField txtAccNo;
    private javax.swing.JTextField txtAdhar;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtMobNo;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPan;
    private javax.swing.JTextArea txtaAdd;
    // End of variables declaration//GEN-END:variables

    private void setUpAccount() {
        //get the account details
        String name = txtName.getText();
        String mobileNo = txtMobNo.getText();
        String address = txtaAdd.getText();
        String adharNo = txtAdhar.getText();
        String panNo = txtPan.getText();
        String gender = rbdMale.isSelected() ? "Male" : "Female";
        String accountType = jlAccType.getSelectedValue().toString();
        int balance = Integer.parseInt(txtAmount.getText());
        int value = 0;

        //validate all the fields
        Validation Validator = new Validation();

        if (balance < 1000) {
            JOptionPane.showMessageDialog(this, "If you wants to create account the minimum 1000 rupies you have to deposite!!!", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {

                if (dragListener1.UserProfileImageFile != null) {
                    mUserImageFile = dragListener1.UserProfileImageFile;
                }

                if (dragListener2.UserSignImageFile != null) {
                    mUserSigantureFile = dragListener2.UserSignImageFile;
                }

                //get the image and signature filePtath to store in db
                String imagePath = saveImage(mUserImageFile);
                String signatureImagePath = saveImage(mUserSigantureFile);

                //create account now
                String acccno=txtAccNo.getText();
                String Type="Deposite";
                String qry="insert into transactions(account_no,type,amount,date_time) values(?,?,?,?)";
                PreparedStatement pst2=conn.prepareStatement(qry);
                
                pst2.setString(1,acccno);
                pst2.setString(2,Type);
                pst2.setString(3,String.valueOf(balance));
                pst2.setString(4,String.valueOf(new java.util.Date()));
                
                pst2.executeUpdate();
                
                
                String query = "INSERT INTO accounts(full_name, mobile_no, address, adhar_no, pan_card_no, gender, account_type, user_image_url, user_sign_image_url,value,balance) VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?)";
                pst = conn.prepareStatement(query);

                //set the values
                pst.setString(1, name);
                pst.setString(2, mobileNo);
                pst.setString(3, address);
                pst.setString(4, adharNo);
                pst.setString(5, panNo);
                pst.setString(6, gender);
                pst.setString(7, accountType);
                pst.setString(8, imagePath);
                pst.setString(9, signatureImagePath);
                pst.setString(10, String.valueOf(value));
                pst.setString(11, String.valueOf(balance));

                if (pst.executeUpdate() == 1) {
                    int accno = Integer.parseInt(txtAccNo.getText());
                    JOptionPane.showMessageDialog(this, "Account created Succssfully...\n Your Account number is: " + accno, "Successfull", JOptionPane.INFORMATION_MESSAGE);

                    setVisible(false);
                    new Home().setVisible(true);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    private void generateAccountId() {
        int currentId = 0;
        try {
            String query = "SELECT account_no FROM accounts order by account_no";
            Statement st = conn.createStatement();

            rs = st.executeQuery(query);
            while (rs.next()) {
                currentId = rs.getInt("account_no");//get the last id presents in accounts
                
            }

            //now increament the currentId to 1 to generate new Id
            currentId++;
            txtAccNo.setText(currentId + "");

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private File uploadImage(JLabel label) {
        File fileToStore = null;
        JFileChooser ch = new JFileChooser();
        /*
        now restric the user to select any
        other files than image files
        allow only jpg, jpeg and png file*/
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image File", new String[]{"jpg", "jpeg", "png"});
        ch.setFileFilter(filter);
        ch.addChoosableFileFilter(filter);

        int returnValue = ch.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            fileToStore = ch.getSelectedFile();

            try {
                BufferedImage userBufferedImage = ImageIO.read(fileToStore);//reads the image from file and buffered to imageBuffered

                //resize the image acording to the size of the label
                BufferedImage resizedImage = CustomImageSize.resize(userBufferedImage, label.getWidth(), label.getHeight());
                //Jlabel doesnt take bufferedImage image as argument so convert it into ImageIcon
                ImageIcon imageIcon = new ImageIcon(resizedImage);

                label.setIcon(imageIcon);//set the icon

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Unable to read the image file!!!", "Error", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }

        return fileToStore;

    }

    private String saveImage(File file) {
        String filePath = null;
        //this method will store the images in /storedImages/ folder
        if (file != null) {
            try {
                //first read image
                BufferedImage bufferedImage = ImageIO.read(file);

                //save the image locally
                File imageFile = new File("./storedImages/" + "acc_no-" + txtAccNo.getText() + "-image-" + System.currentTimeMillis() + ".jpeg");
                filePath = "./storedImages/" + imageFile.getName();
                ImageIO.write(bufferedImage, "jpg", imageFile);

            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        return filePath;
    }

}

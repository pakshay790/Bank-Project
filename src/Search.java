
import java.awt.dnd.DropTarget;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * Search.java
 *
 * Created on 7 Sep, 2017, 5:51:08 PM
 */
/**
 *
 * @author paksh
 */
public class Search extends javax.swing.JFrame {
    
    

    File mUserImageFile;
    File mUserSignFile;

    Connection conn;
    PreparedStatement pst;
    ResultSet rs;

    /**
     * Creates new form Search
     */
    public Search() {
        initComponents();
        conn = DBConnect.connect();
        
        //init the DragListner class for user profile picture
        DragListener dragListener1 = new DragListener(lblUserSignImage);
        //set the target componet for dropping item
        new DropTarget(lblUserSignImage, dragListener1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlSearch = new javax.swing.JPanel();
        lblPhoto = new javax.swing.JLabel();
        lblAccNo = new javax.swing.JLabel();
        txtAccNo = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtHolderName = new javax.swing.JTextField();
        lblName1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddreass = new javax.swing.JTextArea();
        txtAccNo1 = new javax.swing.JLabel();
        txtAccNo2 = new javax.swing.JLabel();
        txtMobileNo = new javax.swing.JTextField();
        txtAdharNo = new javax.swing.JTextField();
        txtAccNo3 = new javax.swing.JLabel();
        txtPanNo = new javax.swing.JTextField();
        txtAccNo4 = new javax.swing.JLabel();
        txtAccType = new javax.swing.JTextField();
        txtAccNo5 = new javax.swing.JLabel();
        txtGender = new javax.swing.JTextField();
        btnFinish = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        txtAccNo6 = new javax.swing.JLabel();
        txtAccBalance = new javax.swing.JTextField();
        txtAccNo7 = new javax.swing.JLabel();
        lblUserImage = new javax.swing.JLabel();
        lblUserSignImage = new javax.swing.JLabel();
        lblSearch = new javax.swing.JButton();
        btnChooseSign = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 204, 0));

        pnlSearch.setBackground(new java.awt.Color(255, 204, 0));

        lblPhoto.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblPhoto.setForeground(new java.awt.Color(153, 0, 0));
        lblPhoto.setText("Photo:");

        lblAccNo.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblAccNo.setForeground(new java.awt.Color(153, 0, 0));
        lblAccNo.setText("Account No:");

        txtAccNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAccNoActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblName.setForeground(new java.awt.Color(153, 0, 0));
        lblName.setText("Holder Name:");

        txtHolderName.setEditable(false);
        txtHolderName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHolderNameActionPerformed(evt);
            }
        });

        lblName1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblName1.setForeground(new java.awt.Color(153, 0, 0));
        lblName1.setText("Address:");

        txtAddreass.setColumns(20);
        txtAddreass.setRows(5);
        jScrollPane1.setViewportView(txtAddreass);

        txtAccNo1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtAccNo1.setForeground(new java.awt.Color(153, 0, 0));
        txtAccNo1.setText("Mobile No:");

        txtAccNo2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtAccNo2.setForeground(new java.awt.Color(153, 0, 0));
        txtAccNo2.setText("Adhar No:");

        txtMobileNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMobileNoActionPerformed(evt);
            }
        });

        txtAdharNo.setEditable(false);

        txtAccNo3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtAccNo3.setForeground(new java.awt.Color(153, 0, 0));
        txtAccNo3.setText("PAN No:");

        txtPanNo.setEditable(false);

        txtAccNo4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtAccNo4.setForeground(new java.awt.Color(153, 0, 0));
        txtAccNo4.setText("Account Type:");

        txtAccType.setEditable(false);
        txtAccType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAccTypeActionPerformed(evt);
            }
        });

        txtAccNo5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtAccNo5.setForeground(new java.awt.Color(153, 0, 0));
        txtAccNo5.setText("Gender:");

        txtGender.setEditable(false);
        txtGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderActionPerformed(evt);
            }
        });

        btnFinish.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnFinish.setForeground(new java.awt.Color(153, 0, 0));
        btnFinish.setText("Finish Update");
        btnFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishActionPerformed(evt);
            }
        });

        btnHome.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnHome.setForeground(new java.awt.Color(153, 0, 0));
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnClose.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnClose.setForeground(new java.awt.Color(153, 0, 0));
        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnLogout.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(153, 0, 0));
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        txtAccNo6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtAccNo6.setForeground(new java.awt.Color(153, 0, 0));
        txtAccNo6.setText("Account Balance:");

        txtAccBalance.setEditable(false);
        txtAccBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAccBalanceActionPerformed(evt);
            }
        });

        txtAccNo7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtAccNo7.setForeground(new java.awt.Color(153, 0, 0));
        txtAccNo7.setText("Signature");

        lblUserImage.setBackground(new java.awt.Color(255, 255, 255));
        lblUserImage.setOpaque(true);

        lblUserSignImage.setBackground(new java.awt.Color(255, 255, 255));
        lblUserSignImage.setOpaque(true);

        lblSearch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblSearch.setForeground(new java.awt.Color(153, 0, 0));
        lblSearch.setText("Search");
        lblSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblSearchActionPerformed(evt);
            }
        });

        btnChooseSign.setBackground(new java.awt.Color(255, 255, 255));
        btnChooseSign.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnChooseSign.setForeground(new java.awt.Color(153, 0, 0));
        btnChooseSign.setText("Choose");
        btnChooseSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseSignActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(255, 255, 255));
        btnReset.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnReset.setForeground(new java.awt.Color(153, 0, 0));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSearchLayout = new javax.swing.GroupLayout(pnlSearch);
        pnlSearch.setLayout(pnlSearchLayout);
        pnlSearchLayout.setHorizontalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchLayout.createSequentialGroup()
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlSearchLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlSearchLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlSearchLayout.createSequentialGroup()
                                .addComponent(lblName1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlSearchLayout.createSequentialGroup()
                                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPhoto)
                                    .addComponent(lblName))
                                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnlSearchLayout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblUserImage, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtAccNo, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblSearch)
                                            .addComponent(txtHolderName, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(lblAccNo))))
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSearchLayout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAccNo5)
                            .addComponent(txtAccNo4)
                            .addComponent(txtAccNo3)
                            .addComponent(txtAccNo2)
                            .addComponent(txtAccNo1)
                            .addComponent(txtAccNo6)
                            .addComponent(txtAccNo7))
                        .addGap(26, 26, 26)
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUserSignImage, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnChooseSign)
                            .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtAccBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAdharNo, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtGender, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPanNo)
                                .addComponent(txtAccType, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE))))
                    .addGroup(pnlSearchLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        pnlSearchLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblUserSignImage, txtAccBalance, txtAccType, txtAdharNo, txtGender, txtMobileNo, txtPanNo});

        pnlSearchLayout.setVerticalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchLayout.createSequentialGroup()
                .addContainerGap(38, Short.MAX_VALUE)
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlSearchLayout.createSequentialGroup()
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAccNo1))
                        .addGap(18, 18, 18)
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAccNo2)
                            .addComponent(txtAdharNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPanNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAccNo3))
                        .addGap(18, 18, 18)
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAccType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAccNo4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAccNo5)
                            .addComponent(txtGender, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAccNo6)
                            .addComponent(txtAccBalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlSearchLayout.createSequentialGroup()
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUserImage, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhoto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAccNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAccNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblSearch)))
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSearchLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHolderName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName))
                        .addGap(20, 20, 20)
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlSearchLayout.createSequentialGroup()
                                .addComponent(lblUserSignImage, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnChooseSign))
                            .addComponent(txtAccNo7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/home.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(278, 278, 278)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(205, 205, 205))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 968, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtAccNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAccNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAccNoActionPerformed

    private void txtHolderNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHolderNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHolderNameActionPerformed

    private void txtAccTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAccTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAccTypeActionPerformed

    private void txtGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGenderActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        setVisible(false);
        new Authentication().setVisible(true);

    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        setVisible(false);
        new Home().setVisible(true);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishActionPerformed
        updateDetails();
    }//GEN-LAST:event_btnFinishActionPerformed

    private void txtAccBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAccBalanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAccBalanceActionPerformed

    private void lblSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblSearchActionPerformed
        System.out.println(txtAccNo.getText());
        
        if (!txtAccNo.getText().equals("")) {
            try {
                String query = "SELECT * FROM accounts WHERE account_no = ? ";
                pst = conn.prepareStatement(query);
                pst.setString(1, txtAccNo.getText());

                rs = pst.executeQuery();
                int value;
                
                
                    
                
               

                if (rs.next() && rs.getString("value").equals("0")) {
                    txtHolderName.setText(rs.getString("full_name"));
                    txtMobileNo.setText(rs.getString("mobile_no"));
                    txtAddreass.setText(rs.getString("address"));
                    txtAdharNo.setText(rs.getString("adhar_no"));
                    txtPanNo.setText(rs.getString("pan_card_no"));
                    txtGender.setText(rs.getString("gender"));
                    txtAccType.setText(rs.getString("account_type"));
                    txtAccBalance.setText(rs.getString("balance"));

                    mUserImageFile = new File(rs.getString("user_image_url"));
                    mUserSignFile = new File(rs.getString("user_sign_image_url"));

                    //display the images in the JLabels
                    displayImage(lblUserImage, mUserImageFile);
                    displayImage(lblUserSignImage, mUserSignFile);

                } else {
                    //account does not exist
                    JOptionPane.showMessageDialog(this, "Account not exist or invalid account number!!!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please enter account number!!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_lblSearchActionPerformed

    private void btnChooseSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseSignActionPerformed
        mUserSignFile = uploadImage(lblUserSignImage);
    }//GEN-LAST:event_btnChooseSignActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtAccNo.setText("");
        txtAccType.setText("");
        txtGender.setText("");
        txtAdharNo.setText("");
        txtAccBalance.setText("");
        txtMobileNo.setText("");
        txtHolderName.setText("");
        txtPanNo.setText("");
        txtAddreass.setText("");
        
        ImageIcon imageIcon = new ImageIcon();
        
        
            //set the image
            lblUserImage.setIcon(imageIcon);
            ImageIcon imgcon = new ImageIcon();
            lblUserSignImage.setIcon(imgcon);
    }//GEN-LAST:event_btnResetActionPerformed

    private void txtMobileNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMobileNoActionPerformed
        
    }//GEN-LAST:event_txtMobileNoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChooseSign;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnFinish;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAccNo;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblPhoto;
    private javax.swing.JButton lblSearch;
    private javax.swing.JLabel lblUserImage;
    private javax.swing.JLabel lblUserSignImage;
    private javax.swing.JPanel pnlSearch;
    private javax.swing.JTextField txtAccBalance;
    private javax.swing.JTextField txtAccNo;
    private javax.swing.JLabel txtAccNo1;
    private javax.swing.JLabel txtAccNo2;
    private javax.swing.JLabel txtAccNo3;
    private javax.swing.JLabel txtAccNo4;
    private javax.swing.JLabel txtAccNo5;
    private javax.swing.JLabel txtAccNo6;
    private javax.swing.JLabel txtAccNo7;
    private javax.swing.JTextField txtAccType;
    private javax.swing.JTextArea txtAddreass;
    private javax.swing.JTextField txtAdharNo;
    private javax.swing.JTextField txtGender;
    private javax.swing.JTextField txtHolderName;
    private javax.swing.JTextField txtMobileNo;
    private javax.swing.JTextField txtPanNo;
    // End of variables declaration//GEN-END:variables

    private void displayImage(JLabel label, File imageFile) {
        try {
            BufferedImage bufferedImage = ImageIO.read(imageFile);//read the image
            //resize the the according to the size of JLabel
            BufferedImage resizedImage = CustomImageSize.resize(bufferedImage, label.getWidth(), label.getHeight());
            //create ImageIcon
            ImageIcon imageIcon = new ImageIcon(resizedImage);
            //set the image
            label.setIcon(imageIcon);

        } catch (Exception e) {
        }
    }

    private File uploadImage(JLabel label) {
        File fileToStore = null;
        JFileChooser ch = new JFileChooser();
        /*
        now restric the user to select any
        other files than image files
        allow only jpg, jpeg and png file*/
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image File", new String[]{"jpg", "jpeg", "png"});
        ch.setFileFilter(filter);
        ch.addChoosableFileFilter(filter);

        int returnValue = ch.showOpenDialog(null);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            fileToStore = ch.getSelectedFile();

            try {
                BufferedImage userBufferedImage = ImageIO.read(fileToStore);//reads the image from file and buffered to imageBuffered

                //resize the image acording to the size of the label
                BufferedImage resizedImage = CustomImageSize.resize(userBufferedImage, label.getWidth(), label.getHeight());
                //Jlabel doesnt take bufferedImage image as argument so convert it into ImageIcon
                ImageIcon imageIcon = new ImageIcon(resizedImage);
                label.setIcon(imageIcon);//set the icon

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Unable to read the image file!!!", "Error", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }
        }
        return fileToStore;
    }

    private void updateDetails() {
        String name = txtHolderName.getText();
        String accNo = txtAccNo.getText();
        String gender = txtGender.getText();
        String mobilenNo = txtMobileNo.getText();
        String addr = txtAddreass.getText();
        //String userImageFilePath = "./storedImages/" + mUserImageFile.getName();
        String userSignImageFilePath = saveImage(mUserSignFile);

        Validation validator = new Validation();
        //check if the fields are empty
        if (validator.isFieldEmpty(txtAccNo, txtHolderName, txtMobileNo) == 0) {
            if (!validator.isNumber(mobilenNo) || mobilenNo.length() == 10) {
            
            try {
                String query = "UPDATE accounts SET full_name = ?, mobile_no = ?, address = ?, user_sign_image_url = ? WHERE account_no = ?";
                pst = conn.prepareStatement(query);
                pst.setString(1, name);
                pst.setString(2, mobilenNo);
                pst.setString(3, addr);
                //pst.setString(4, userImageFilePath);
                pst.setString(4, userSignImageFilePath);
                pst.setString(5, accNo);
                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Account details updated successfully...","Success", JOptionPane.INFORMATION_MESSAGE);
                setVisible(false);
                new Home().setVisible(true);

            } catch (Exception e) {
                e.printStackTrace();
            }
           
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Please Check Mobile no is not valid!!!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Please fill all the fields!!!", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }
    
    
    private String saveImage(File file) {
        String filePath = null;
        //this method will store the images in /storedImages/ folder
        if (file != null) {
            try {
                //first read image
                BufferedImage bufferedImage = ImageIO.read(file);
                
                //save the image locally
                File imageFile = new File("./storedImages/" + "acc_no-"+txtAccNo.getText() + "-image-" + System.currentTimeMillis() + ".jpeg");
                filePath = "./storedImages/" +imageFile.getName();
                ImageIO.write(bufferedImage, "jpg", imageFile);
                
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        return filePath;
    }
}
